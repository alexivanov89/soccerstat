{"version":3,"file":"static/js/965.c0bbd6c3.chunk.js","mappings":"kbA4BMA,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,eAAgB,CACdC,UAAW,OACX,uBAAwB,CACtBC,MAAO,GACPC,gBAAiB,WAEnB,6BAA8B,CAC5BC,aAAc,EACdC,UAAW,6CACXC,OAAQ,yBAEV,6BAA8B,CAC5BF,aAAc,GACdC,UAAW,4CACXC,OAAQ,0BAGZC,OAAM,QACJL,MAAO,OACPM,SAAU,SACVP,UAAW,sBACVF,EAAMU,YAAYC,KAAK,MAAQ,CAC9BT,UAAW,2BA0IjB,EArImB,WAAO,IAAD,EACjBU,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,KAAY,qBAAGD,gBAAhCA,aACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MACXC,EAAU3B,IAChB4B,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WACRhB,GAASiB,EAAAA,EAAAA,QACR,KAEHD,EAAAA,EAAAA,YAAU,WACRV,EAAU,OACRJ,QADQ,IACRA,OADQ,EACRA,EAAcA,aAAagB,MAAK,SAACC,EAAGC,GAClC,OAAID,EAAEE,KAAKC,cAAgBF,EAAEC,KAAKC,eACxB,EACCH,EAAEE,KAAKC,cAAgBF,EAAEC,KAAKC,cAChC,EAEA,MAIbR,QAAQC,IAAIV,KACX,CAACH,EAAcF,KAElBgB,EAAAA,EAAAA,YAAU,WACJO,QAAQlB,IAA+B,IAAnBA,EAAQmB,SAC9BhB,GAAe,OAAIH,IACnBS,QAAQC,IAAIR,MAEb,CAACF,KAEJW,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,OAAIL,QAAJ,IAAIA,GAAJ,UAAIA,EAAUc,aAAd,OAAI,EAAiBC,IACnBlB,GAAe,OAAIH,EAAQsB,QAAO,2BAAGD,OAAgB,OAACf,QAAD,IAACA,GAAD,UAACA,EAAUc,aAAX,aAAC,EAAiBC,SAEzEZ,QAAQC,IAAIR,KACX,QAACI,QAAD,IAACA,GAAD,UAACA,EAAUc,aAAX,aAAC,EAAiBC,KAYrB,OACE,UAACE,EAAA,EAAD,CAAMC,GAAI,CAAEpC,aAAc,GAA1B,WACE,UAACqC,EAAA,GAAD,CAAMC,WAAS,EAACC,WAAY,EAAGH,GAAI,CAAEI,EAAG,GAAxC,WACE,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,0DACNC,UAAU,8KACVV,GAAI,CAAEI,EAAG,QAGb,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACK/B,GAA+B,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASmB,UACrB,SAACgB,EAAA,EAAD,CACEC,eAAa,EACbf,GAAG,iBACHgB,eAAgB,SAACC,GAAD,gBAAeA,EAAOtB,KAAtB,aAA+BsB,EAAOC,KAAKC,cAC3DxC,QAASA,EACTwB,GAAI,CAAEtC,MAAO,OAAQuD,QAAS,WAC9BC,SAAU,SAACC,EAAGC,IA5BL,SAACA,GACpBxC,EAAQyC,KAAK,CACXC,SAAUC,EAAAA,EAAAA,KACV3B,MAAO,CAAEC,GAAE,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAOvB,MA0BV2B,CAAaJ,IAEfK,YAAa,SAACC,GAAD,OAAY,SAACC,EAAA,GAAD,kBAAeD,GAAf,IAAuBE,MAAM,oGAK9D,SAACC,EAAA,EAAD,CAAOC,UAAW9C,EAAQjB,MAA1B,UACE,SAACgE,EAAA,EAAD,CAAgBD,UAAW9C,EAAQxB,eAAnC,UACE,UAACwE,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,WACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,yFACA,SAACA,EAAA,EAAD,oDACA,SAACA,EAAA,EAAD,oGAGJ,SAACC,EAAA,EAAD,iBACG7D,QADH,IACGA,OADH,EACGA,EAAS8D,KAAI,SAACjC,GAAD,OACZ,UAAC8B,EAAA,EAAD,CAAwBnC,GAAI,CAAE,mCAAoC,CAAElC,OAAQ,IAA5E,WACE,SAACsE,EAAA,EAAD,WACE,SAACG,EAAA,GAAD,CAEEC,UAAWC,EAAAA,GACXC,GAAI,CAAEpB,SAAUC,EAAAA,EAAAA,YAAwB3B,MAAO,CAAEC,GAAG,GAAD,OAAKQ,EAAKR,MAH/D,SAKGQ,EAAKb,MAJDa,EAAKR,OAOd,UAACuC,EAAA,EAAD,WACG/B,EAAKU,KAAKvB,MACX,SAACmD,EAAA,EAAD,CAAW3C,GAAI,CAAEtC,MAAO,GAAIkF,OAAQ,IAAMC,KAAM,EAAhD,UACE,SAACC,EAAA,EAAD,UACGpD,QAAQW,EAAKU,KAAKgC,YACjB,gBAAKC,IAAK3C,EAAKU,KAAKgC,UAAWE,IAAI,WAAWC,QAAQ,SACpD,MAHc7C,EAAKU,KAAKgC,iBAOlC,SAACX,EAAA,EAAD,WACE,SAACG,EAAA,GAAD,CAEEC,UAAWC,EAAAA,GACXC,GAAI,CAAEpB,SAAUC,EAAAA,EAAAA,eAA2B3B,MAAO,CAAEC,GAAG,GAAD,OAAKQ,EAAKR,MAChEG,GAAI,CAAEmD,GAAI,GAJZ,UAME,UAACC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,UAAtC,oEACajD,EAAKb,SANba,EAAKR,QAtBDQ,EAAKR,oB,uCClJpC,EAAuB,0BCkDvB,EA7CoB,WAAO,IAAD,MAClB0D,GAAejF,EAAAA,EAAAA,KAAY,qBAAGiF,gBAC5BC,EAAqBD,EAArBC,QAASN,EAAYK,EAAZL,QACX/E,GAAWC,EAAAA,EAAAA,MAMjB,OAJAe,EAAAA,EAAAA,YAAU,WACRhB,GAASsF,EAAAA,EAAAA,QACR,KAGD,UAAC1D,EAAA,EAAD,CAAMC,GAAI,CAAEpC,aAAc,EAAG8F,GAAI,EAAGjG,UAAW,QAA/C,WACE,SAAC+C,EAAA,EAAD,CAAYR,GAAI,CAAEI,EAAG,EAAGuD,GAAI,GAAKlD,MAAM,kJACvC,SAACmD,EAAA,EAAD,CAAK5D,GAAI,CAAEI,EAAG,GAAd,UACE,SAACyD,EAAA,EAAD,CAAM/B,UAAWgC,EAAjB,UACE,UAAC7D,EAAA,GAAD,CAAMC,WAAS,EAACC,WAAY,EAAGH,GAAI,CAAEhC,SAAU,OAAQ+F,WAAY,UAAnE,UACGb,IAAW,SAACc,EAAA,EAAD,CAAkBV,MAAM,aAClCJ,GAC6B,KAAtB,OAAPM,QAAO,IAAPA,GAAA,UAAAA,EAASA,eAAT,eAAkB7D,UADnB,OAEC6D,QAFD,IAECA,GAFD,UAECA,EAASA,eAFV,aAEC,EAAkBlB,KAAI,SAAC2B,GAAD,OACpB,SAAChE,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG2D,GAAI,EAAkBlE,GAAI,CAAEhC,SAAU,UAAhE,UACE,UAAC4F,EAAA,EAAD,CAAK5D,GAAI,CAAEmE,QAAS,OAAQC,SAAU,OAAQC,SAAU,WAAxD,WACE,SAACjB,EAAA,EAAD,CAAYC,QAAQ,OAAOC,MAAM,UAAjC,SACGW,EAAMK,YAAY9E,QAErB,SAAC4D,EAAA,EAAD,CAAYC,QAAQ,OAAOC,MAAM,UAAUtD,GAAI,CAAEuE,GAAI,GAArD,mBACMN,EAAMO,SADZ,4BAGA,SAACpB,EAAA,EAAD,CAAYC,QAAQ,OAAOC,MAAM,UAAUtD,GAAI,CAAEyE,SAAU,KAA3D,mBACMR,EAAMS,SAASlF,KADrB,cAC+ByE,EAAMU,SAASnF,YATZyE,EAAMpE,SAc9CqD,GAAwC,KAAtB,OAAPM,QAAO,IAAPA,GAAA,UAAAA,EAASA,eAAT,eAAkB7D,UAC7B,SAACyD,EAAA,EAAD,CAAYC,QAAQ,OAAOC,MAAM,UAAjC,2HC5Bd,EATkC,WAChC,OACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/ListLeague/ListLeague.jsx","components/ListMatches/index.module.scss","components/ListMatches/ListMatches.jsx","pages/ListOfLeaguesCompetitions/ListOfLeaguesCompetitions.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { routesPath } from '../../router/routes';\nimport { fetchCompetitionsAsync } from '../../store/reducers/competitionsReducer';\nimport {\n  Autocomplete,\n  Box,\n  Card,\n  CardHeader,\n  Grid,\n  ImageList,\n  ImageListItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    maxHeight: '73vh',\n    '&::-webkit-scrollbar': {\n      width: 16,\n      backgroundColor: '#F5F7FA',\n    },\n    '&::-webkit-scrollbar-track': {\n      borderRadius: 4,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.05)',\n      border: 'solid 6px transparent',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      borderRadius: 12,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.2)',\n      border: 'solid 6px transparent',\n    },\n  },\n  paper: {\n    width: '100%',\n    overflow: 'hidden',\n    maxHeight: 'calc(80vh - 144px)',\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 'calc(80vh - 224px)',\n    },\n  },\n}));\n\nconst ListLeague = () => {\n  const dispatch = useDispatch();\n  const { competitions } = useSelector(({ competitions }) => competitions);\n  const [options, setOptions] = useState([]);\n  const [prepareComp, setPrepareComp] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n  console.log(location);\n\n  useEffect(() => {\n    dispatch(fetchCompetitionsAsync());\n  }, []);\n\n  useEffect(() => {\n    setOptions(\n      competitions?.competitions.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }),\n    );\n    console.log(options);\n  }, [competitions, dispatch]);\n\n  useEffect(() => {\n    if (Boolean(options) && options.length !== 0) {\n      setPrepareComp([...options]);\n      console.log(prepareComp);\n    }\n  }, [options]);\n\n  useEffect(() => {\n    if (location?.state?.id) {\n      setPrepareComp([...options.filter(({ id }) => id === +location?.state?.id)]);\n    }\n    console.log(prepareComp);\n  }, [location?.state?.id]);\n\n  const handleChange = (value) => {\n    history.push({\n      pathname: routesPath.home,\n      state: { id: value?.id },\n    });\n    // console.log(location?.state?.id);\n    // setPrepareComp([...options.filter(({ id }) => id === +location?.state?.id)]);\n    // console.log(prepareComp);\n  };\n\n  return (\n    <Card sx={{ borderRadius: 4 }}>\n      <Grid container rowSpacing={1} sx={{ p: 1 }}>\n        <Grid item xs={12} sm={6}>\n          <CardHeader\n            title=\"Список лиг\"\n            subheader=\"Чемпионаты ведущих стран Европы\"\n            sx={{ p: 0 }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {!!options && options?.length !== 0 && (\n            <Autocomplete\n              disablePortal\n              id=\"combo-box-demo\"\n              getOptionLabel={(option) => `${option.name}, ${option.area.countryCode}`}\n              options={options}\n              sx={{ width: '100%', padding: '0px 5px' }}\n              onChange={(e, value) => {\n                handleChange(value);\n              }}\n              renderInput={(params) => <TextField {...params} label=\"Найти Чемпионат\" />}\n            />\n          )}\n        </Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <TableContainer className={classes.tableContainer}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Название лиги</TableCell>\n                <TableCell>Страна</TableCell>\n                <TableCell>Календарь лиги</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {options?.map((item) => (\n                <TableRow key={item.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{ pathname: routesPath.listOfTeams, state: { id: `${item.id}` } }}\n                    >\n                      {item.name}\n                    </ListItem>\n                  </TableCell>\n                  <TableCell>\n                    {item.area.name}\n                    <ImageList sx={{ width: 30, height: 30 }} cols={1}>\n                      <ImageListItem key={item.area.ensignUrl}>\n                        {Boolean(item.area.ensignUrl) ? (\n                          <img src={item.area.ensignUrl} alt=\"img_flag\" loading=\"lazy\" />\n                        ) : null}\n                      </ImageListItem>\n                    </ImageList>\n                  </TableCell>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{ pathname: routesPath.leagueCalendar, state: { id: `${item.id}` } }}\n                      sx={{ pl: 0 }}\n                    >\n                      <Typography variant=\"subtitle1\" color=\"initial\">\n                        Календарь {item.name}\n                      </Typography>\n                    </ListItem>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Card>\n  );\n};\n\nexport default ListLeague;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListMatches_list__qrLFT\"};","import { useEffect } from 'react';\nimport { Box, Card, CardHeader, CircularProgress, Grid, List, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTodayMatchesAsync } from '../../store/reducers/todayMatchesReducer';\nimport s from './index.module.scss';\n\nconst ListMatches = () => {\n  const todayMatches = useSelector(({ todayMatches }) => todayMatches);\n  const { matches, loading } = todayMatches;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodayMatchesAsync());\n  }, []);\n\n  return (\n    <Card sx={{ borderRadius: 4, mb: 2, maxHeight: '20vh' }}>\n      <CardHeader sx={{ p: 1, pb: 0 }} title=\"Список сегодняшних матчей\" />\n      <Box sx={{ p: 1 }}>\n        <List className={s.list}>\n          <Grid container rowSpacing={1} sx={{ overflow: 'auto', alignItems: 'center' }}>\n            {loading && <CircularProgress color=\"primary\" />}\n            {!loading &&\n              matches?.matches?.length !== 0 &&\n              matches?.matches?.map((match) => (\n                <Grid item xs={12} sm={6} lg={4} key={match.id} sx={{ overflow: 'hidden' }}>\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', fontSize: '0.75rem' }}>\n                    <Typography variant=\"span\" color=\"initial\">\n                      {match.competition.name}\n                    </Typography>\n                    <Typography variant=\"span\" color=\"initial\" sx={{ px: 1 }}>\n                      {`${match.matchday} Тур: `}\n                    </Typography>\n                    <Typography variant=\"span\" color=\"initial\" sx={{ minWidth: 300 }}>\n                      {`${match.homeTeam.name} - ${match.awayTeam.name}`}\n                    </Typography>\n                  </Box>\n                </Grid>\n              ))}\n            {!loading && matches?.matches?.length === 0 && (\n              <Typography variant=\"span\" color=\"initial\">\n                Сегодня матчей нет\n              </Typography>\n            )}\n          </Grid>\n        </List>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ListMatches;\n","import { ListLeague } from '../../components/ListLeague';\nimport { ListMatches } from '../../components/ListMatches';\n\nconst ListOfLeaguesCompetitions = () => {\n  return (\n    <>\n      <ListMatches />\n      <ListLeague />\n    </>\n  );\n};\n\nexport default ListOfLeaguesCompetitions;\n"],"names":["useStyles","makeStyles","theme","tableContainer","maxHeight","width","backgroundColor","borderRadius","boxShadow","border","paper","overflow","breakpoints","down","dispatch","useDispatch","competitions","useSelector","useState","options","setOptions","prepareComp","setPrepareComp","history","useHistory","location","useLocation","classes","console","log","useEffect","fetchCompetitionsAsync","sort","a","b","name","toLowerCase","Boolean","length","state","id","filter","Card","sx","Grid","container","rowSpacing","p","item","xs","sm","CardHeader","title","subheader","Autocomplete","disablePortal","getOptionLabel","option","area","countryCode","padding","onChange","e","value","push","pathname","routesPath","handleChange","renderInput","params","TextField","label","Paper","className","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","ListItem","component","NavLink","to","ImageList","height","cols","ImageListItem","ensignUrl","src","alt","loading","pl","Typography","variant","color","todayMatches","matches","fetchTodayMatchesAsync","mb","pb","Box","List","s","alignItems","CircularProgress","match","lg","display","flexWrap","fontSize","competition","px","matchday","minWidth","homeTeam","awayTeam"],"sourceRoot":""}