{"version":3,"file":"static/js/541.3443b40b.chunk.js","mappings":"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","sources":["components/ListCalendar/ListCalendar.jsx","components/MyAutocomplete/MyAutocomplete.jsx","pages/TeamCalendar/TeamCalendar.js"],"sourcesContent":["import { format } from 'date-fns';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst ListCalendar = ({ matches }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper>\n      <Grid container rowSpacing={1} sx={{ p: 1, display: 'flex', justifyContent: 'center' }}>\n        {matches?.matches?.length !== 0 &&\n          matches?.matches?.map(({ competition, utcDate, matchday, score, homeTeam, awayTeam }) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              md={4}\n              lg={3}\n              key={`${utcDate}-${homeTeam.name}-${awayTeam.name}`}\n            >\n              <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                {matches?.competition\n                  ? `${matches.competition.name}, ${matchday} тур`\n                  : `${competition?.name}, ${matchday} тур`}\n              </Typography>\n              <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                {format(new Date(utcDate), 'MM/dd/yyyy k:m')}\n              </Typography>\n              <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                {`${homeTeam.name} ${\n                  score.fullTime.homeTeam === null ? '' : score.fullTime.homeTeam\n                } - ${score.fullTime.awayTeam === null ? '' : score.fullTime.awayTeam} ${\n                  awayTeam.name\n                }`}\n              </Typography>\n            </Grid>\n          ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ListCalendar;\n","import { useState } from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\n\nconst MyAutocomplete = ({ getOptionLabel, options, onChange, label }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      getOptionLabel={getOptionLabel}\n      options={options}\n      sx={{ width: '100%', padding: '0px 5px' }}\n      onChange={(e, newValue) => {\n        onChange(newValue);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  );\n};\n\nexport default MyAutocomplete;\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { ListCalendar } from '../../components/ListCalendar';\nimport { MyAutocomplete } from '../../components/MyAutocomplete';\nimport { fetchMatchesTeamAsync } from '../../store/reducers/matchesTeamReducer';\nimport { SetFilterTeamsLeague } from '../../store/actions/creator/teamsLeague';\nimport {\n  fetchTeamsLeagueAsync,\n  getTeamsLeagueSelector,\n} from '../../store/reducers/teamsLeagueReducer';\nimport { routesPath } from '../../router/routes';\nimport { ClearMatchesTeam } from '../../store/actions/creator/matchesTeam';\n\nconst TeamCalendar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { matches, loading, error } = useSelector(({ matchesTeam }) => matchesTeam);\n  const { dateFrom, dateTo } = useSelector(({ filters }) => filters);\n  const teamsLeagueSelected = useSelector(getTeamsLeagueSelector);\n\n  const prepareTeamsLeague = teamsLeagueSelected.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (location.state?.id) {\n      dispatch(\n        fetchMatchesTeamAsync(location.state.id, [\n          { name: 'dateFrom', value: dateFrom },\n          { name: 'dateTo', value: dateTo },\n        ]),\n      );\n    }\n    return () => {\n      dispatch(SetFilterTeamsLeague(null));\n      dispatch(ClearMatchesTeam());\n    };\n  }, [dateFrom, dateTo, location.state?.id]);\n\n  useEffect(() => {\n    dispatch(fetchTeamsLeagueAsync(2021));\n    return () => {\n      dispatch(ClearMatchesTeam());\n    };\n  }, []);\n\n  const handleChange = useCallback(\n    (value) => {\n      dispatch(SetFilterTeamsLeague(value?.id));\n      history.push({\n        pathname: routesPath.teamCalendar,\n        state: { id: `${value?.id}` },\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      {location.state?.id ? (\n        <>\n          {loading && 'loading'}\n          {!loading && !error && <ListCalendar matches={matches} />}\n          {error && (\n            <Typography variant=\"h1\" component=\"h2\" color=\"white\" align=\"center\">\n              нет данных\n            </Typography>\n          )}\n        </>\n      ) : (\n        <Card\n          sx={{\n            borderRadius: 4,\n            minHeight: '120px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <MyAutocomplete\n            getOptionLabel={(option) => `${option.name}, ${option.area.name}`}\n            options={prepareTeamsLeague}\n            onChange={handleChange}\n            label={'Найти команду'}\n          />\n          <Typography variant=\"h5\" color=\"initial\">\n            Выберите команду\n          </Typography>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default TeamCalendar;\n"],"names":["useStyles","makeStyles","theme","root","matches","Paper","Grid","container","rowSpacing","sx","p","display","justifyContent","length","map","competition","utcDate","matchday","score","homeTeam","awayTeam","item","xs","sm","md","lg","Typography","mb","textAlign","color","name","format","Date","fullTime","getOptionLabel","options","onChange","label","useState","inputValue","setInputValue","Autocomplete","disablePortal","id","width","padding","e","newValue","onInputChange","event","newInputValue","renderInput","params","TextField","location","useLocation","history","useHistory","dispatch","useDispatch","useSelector","matchesTeam","loading","error","filters","dateFrom","dateTo","prepareTeamsLeague","getTeamsLeagueSelector","sort","a","b","toLowerCase","useEffect","state","fetchMatchesTeamAsync","value","SetFilterTeamsLeague","ClearMatchesTeam","fetchTeamsLeagueAsync","handleChange","useCallback","push","pathname","routesPath","variant","component","align","borderRadius","minHeight","flexDirection","alignItems","option","area"],"sourceRoot":""}