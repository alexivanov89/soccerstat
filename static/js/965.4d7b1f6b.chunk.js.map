{"version":3,"file":"static/js/965.4d7b1f6b.chunk.js","mappings":"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","sources":["components/ListLeague/ListLeague.jsx","components/ListMatches/index.module.scss","components/ListMatches/ListMatches.jsx","pages/ListOfLeaguesCompetitions/ListOfLeaguesCompetitions.js"],"sourcesContent":["import {\n  Autocomplete,\n  Box,\n  Card,\n  CardHeader,\n  Grid,\n  ImageList,\n  ImageListItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation, NavLink } from 'react-router-dom';\nimport { routesPath } from '../../router/routes';\nimport { fetchCompetitionsAsync } from '../../store/reducers/competitionsReducer';\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    maxHeight: 375,\n    '&::-webkit-scrollbar': {\n      width: 16,\n      backgroundColor: '#F5F7FA',\n    },\n    '&::-webkit-scrollbar-track': {\n      borderRadius: 4,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.05)',\n      border: 'solid 6px transparent',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      borderRadius: 12,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.2)',\n      border: 'solid 6px transparent',\n    },\n  },\n}));\n\nconst ListLeague = () => {\n  const dispatch = useDispatch();\n  const { competitions } = useSelector(({ competitions }) => competitions);\n  const [options, setOptions] = useState([]);\n  const [prepareComp, setprepareComp] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    setOptions(\n      competitions?.competitions.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }),\n    );\n    setprepareComp(\n      competitions?.competitions.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }),\n    );\n  }, [competitions, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchCompetitionsAsync());\n  }, []);\n\n  const handleChange = (value) => {\n    const searchParams = new URLSearchParams(location?.search);\n    const idParam = searchParams.get('id');\n    console.log(idParam);\n    console.log(prepareComp.id);\n    setprepareComp([...prepareComp.filter(({ id }) => +id === value?.id)]);\n    history.push(`${location.pathname}?id=${value?.id}`);\n  };\n\n  return (\n    <Card sx={{ borderRadius: 4 }}>\n      <Grid container rowSpacing={1}>\n        <Grid item xs={12}>\n          <CardHeader title=\"Список лиг\" subheader=\"Чемпионаты ведущих стран Европы\" />\n        </Grid>\n        {/* <Grid item xs={12}>\n          {!!options && options?.length !== 0 && (\n            <Autocomplete\n              disablePortal\n              id=\"combo-box-demo\"\n              getOptionLabel={(option) => `${option.name}, ${option.area.countryCode}`}\n              options={options}\n              sx={{ width: 300 }}\n              onChange={(e, value) => {\n                handleChange(value);\n              }}\n              renderInput={(params) => <TextField {...params} label=\"Найти Чемпионат\" />}\n            />\n          )}\n        </Grid> */}\n      </Grid>\n\n      {/* <Box sx={{ p: 3 }}>\n        <List sx={{ p: 1, maxHeight: '40vh', overflowY: 'auto' }}>\n          {!competitions?.loading &&\n            competitions?.competitions.map(({ id, name, area }) => (\n              <ListItem key={id} component={NavLink} to={`/leagueCalendar/${id}`}>\n                <ListItemText primary={`${name}, ${area.countryCode}`} />\n              </ListItem>\n            ))}\n        </List>\n      </Box> */}\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer className={classes.tableContainer}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Название лиги</TableCell>\n                <TableCell>Страна</TableCell>\n                <TableCell>Календарь лиги</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {options?.map((item) => (\n                <TableRow key={item.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{ pathname: routesPath.listOfTeams, state: { id: `${item.id}` } }}\n                    >\n                      {item.name}\n                    </ListItem>\n                  </TableCell>\n                  <TableCell>\n                    {item.area.name}\n                    <ImageList sx={{ width: 30, height: 30 }} cols={1}>\n                      <ImageListItem key={item.area.ensignUrl}>\n                        <img src={item.area.ensignUrl} loading=\"lazy\" />\n                      </ImageListItem>\n                    </ImageList>\n                  </TableCell>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{ pathname: routesPath.leagueCalendar, state: { id: `${item.id}` } }}\n                      sx={{ pl: 0 }}\n                    >\n                      <Typography variant=\"subtitle1\" color=\"initial\">\n                        Календарь {item.name}\n                      </Typography>\n                    </ListItem>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Card>\n  );\n};\n\nexport default ListLeague;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListMatches_list__qrLFT\"};","import { useEffect } from 'react';\nimport { Box, Card, CardHeader, CircularProgress, Grid, List, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTodayMatchesAsync } from '../../store/reducers/todayMatchesReducer';\nimport s from './index.module.scss';\n\nconst ListMatches = () => {\n  const todayMatches = useSelector(({ todayMatches }) => todayMatches);\n  const { matches, loading } = todayMatches;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodayMatchesAsync());\n  }, []);\n\n  return (\n    <Card sx={{ borderRadius: 4, mb: 2 }}>\n      <CardHeader sx={{ p: 1, pb: 0 }} title=\"Список сегодняшних матчей\" />\n      <Box sx={{ p: 1 }}>\n        <List className={s.list}>\n          <Grid container rowSpacing={1} sx={{ minHeight: 96, alignItems: 'center' }}>\n            {loading && <CircularProgress color=\"primary\" />}\n            {!loading &&\n              matches?.matches?.length !== 0 &&\n              matches?.matches?.map((match) => (\n                <Grid item xs={12} sm={6} lg={4} key={match.id}>\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', fontSize: '0.75rem' }}>\n                    <Typography variant=\"span\" color=\"initial\">\n                      {match.competition.name}\n                    </Typography>\n                    <Typography variant=\"span\" color=\"initial\" sx={{ px: 1 }}>\n                      {`${match.matchday} Тур`}\n                    </Typography>\n                    <Typography variant=\"span\" color=\"initial\" sx={{ minWidth: 300 }}>\n                      {`${match.homeTeam.name} - ${match.awayTeam.name}`}\n                    </Typography>\n                  </Box>\n                </Grid>\n              ))}\n            {!loading && matches?.matches?.length === 0 && (\n              <Typography variant=\"span\" color=\"initial\">\n                Сегодня матчей нет\n              </Typography>\n            )}\n          </Grid>\n        </List>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ListMatches;\n","import { ListLeague } from '../../components/ListLeague';\nimport { ListMatches } from '../../components/ListMatches';\n\nconst ListOfLeaguesCompetitions = () => {\n  return (\n    <>\n      <ListMatches />\n      <ListLeague />\n    </>\n  );\n};\n\nexport default ListOfLeaguesCompetitions;\n"],"names":["useStyles","makeStyles","theme","tableContainer","maxHeight","width","backgroundColor","borderRadius","boxShadow","border","dispatch","useDispatch","competitions","useSelector","useState","options","setOptions","setprepareComp","classes","useHistory","useLocation","useEffect","sort","a","b","name","toLowerCase","fetchCompetitionsAsync","Card","sx","Grid","container","rowSpacing","item","xs","CardHeader","title","subheader","Paper","overflow","TableContainer","className","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","ListItem","component","NavLink","to","pathname","routesPath","state","id","area","ImageList","height","cols","ImageListItem","src","ensignUrl","loading","pl","Typography","variant","color","todayMatches","matches","fetchTodayMatchesAsync","mb","p","pb","Box","List","s","minHeight","alignItems","CircularProgress","length","match","sm","lg","display","flexWrap","fontSize","competition","px","matchday","minWidth","homeTeam","awayTeam"],"sourceRoot":""}