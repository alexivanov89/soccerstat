{"version":3,"file":"static/js/936.22a1a274.chunk.js","mappings":"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","sources":["components/ListData/ListData.jsx","pages/ListOfTeams/ListOfTeams.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport {\n  Autocomplete,\n  Card,\n  CardHeader,\n  Grid,\n  ImageList,\n  ImageListItem,\n  ListItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    maxHeight: '60vh',\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: '55vh',\n    },\n    '&::-webkit-scrollbar': {\n      width: 16,\n      backgroundColor: '#F5F7FA',\n    },\n    '&::-webkit-scrollbar-track': {\n      borderRadius: 4,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.05)',\n      border: 'solid 6px transparent',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      borderRadius: 12,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.2)',\n      border: 'solid 6px transparent',\n    },\n  },\n  paper: {\n    width: '100%',\n    overflow: 'hidden',\n  },\n}));\n\nconst ListData = ({ list, listOptions, handleChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Card sx={{ borderRadius: 4 }}>\n      <Grid container rowSpacing={1} sx={{ p: 1 }}>\n        <Grid item xs={12} sm={6}>\n          <CardHeader title={listOptions.title} subheader={listOptions.subheader} sx={{ p: 0 }} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {list.length !== 0 && (\n            <Autocomplete\n              disablePortal\n              id=\"combo-box-demo\"\n              getOptionLabel={listOptions.autocompleteOptions.getOptionLabel}\n              options={list}\n              sx={{ width: '100%', padding: '0px 5px' }}\n              onChange={(e, value) => {\n                handleChange(value);\n              }}\n              renderInput={(params) => (\n                <TextField {...params} label={listOptions.autocompleteOptions.label} />\n              )}\n            />\n          )}\n        </Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <TableContainer className={classes.tableContainer}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {listOptions.table.tableColumns.map((item) => (\n                  <TableCell key={item}>{item}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list.map((item) => (\n                <TableRow key={item.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={listOptions.table.linkPathFirstColummns ? NavLink : null}\n                      to={{\n                        pathname: listOptions.table.linkPathFirstColummns,\n                        state: { id: `${item.id}` },\n                      }}\n                    >\n                      {item.name}\n                    </ListItem>\n                  </TableCell>\n                  <TableCell>\n                    {item.area.name}\n                    <ImageList sx={{ width: 30, height: 30 }} cols={1}>\n                      <ImageListItem key={item.area.ensignUrl}>\n                        {\n                          (listOptions.table.imgOption =\n                            'ensignUrl' &&\n                            (Boolean(item.area.ensignUrl) ? (\n                              <img src={item.area.ensignUrl} alt=\"img\" loading=\"lazy\" />\n                            ) : null))\n                        }\n                        {\n                          (listOptions.table.imgOption =\n                            'crestUrl' && Boolean(item.crestUrl) ? (\n                              <img src={item.crestUrl} alt=\"img\" loading=\"lazy\" />\n                            ) : null)\n                        }\n                      </ImageListItem>\n                    </ImageList>\n                  </TableCell>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{\n                        pathname: listOptions.table.linkPathLastColummns,\n                        state: { id: `${item.id}` },\n                      }}\n                      sx={{ pl: 0 }}\n                    >\n                      <Typography variant=\"subtitle1\" color=\"initial\">\n                        Календарь {item.name}\n                      </Typography>\n                    </ListItem>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Card>\n  );\n};\n\nexport default ListData;\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { ListData } from '../../components/ListData';\nimport { routesPath } from '../../router/routes';\nimport { SetFilterTeamsLeague } from '../../store/actions/creator/teamsLeague';\nimport {\n  fetchTeamsLeagueAsync,\n  getTeamsLeagueSelector,\n} from '../../store/reducers/teamsLeagueReducer';\n\nconst ListOfTeams = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const teamsLeagueSelected = useSelector(getTeamsLeagueSelector);\n  const { teamsLeague } = useSelector(({ teamsLeague }) => teamsLeague);\n\n  const prepareTeamsLeague = teamsLeagueSelected.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (location.state) {\n      dispatch(fetchTeamsLeagueAsync(location.state.id));\n    }\n  }, []);\n\n  const handleChange = useCallback(\n    (value) => {\n      dispatch(SetFilterTeamsLeague(value?.id));\n    },\n    [dispatch],\n  );\n\n  const listOptions = {\n    title: 'Список команд',\n    subheader: `Команды ${teamsLeague?.competition?.name}`,\n    autocompleteOptions: {\n      label: 'Найти команду',\n      getOptionLabel: (option) => `${option.name}, ${option.area.name}`,\n    },\n    table: {\n      tableColumns: ['Название команды', 'Страна', 'Календарь команды'],\n      linkPathFirstColummns: null,\n      linkPathLastColummns: routesPath.teamCalendar,\n      imgOption: 'crestUrl',\n    },\n  };\n\n  return (\n    <ListData list={prepareTeamsLeague} listOptions={listOptions} handleChange={handleChange} />\n  );\n};\n\nexport default ListOfTeams;\n"],"names":["useStyles","makeStyles","theme","tableContainer","maxHeight","breakpoints","down","width","backgroundColor","borderRadius","boxShadow","border","paper","overflow","list","listOptions","handleChange","classes","Card","sx","Grid","container","rowSpacing","p","item","xs","sm","CardHeader","title","subheader","length","Autocomplete","disablePortal","id","getOptionLabel","autocompleteOptions","options","padding","onChange","e","value","renderInput","params","TextField","label","Paper","className","TableContainer","Table","stickyHeader","TableHead","TableRow","table","tableColumns","map","TableCell","TableBody","ListItem","component","linkPathFirstColummns","NavLink","to","pathname","state","name","area","ImageList","height","cols","ImageListItem","imgOption","Boolean","ensignUrl","src","alt","loading","crestUrl","linkPathLastColummns","pl","Typography","variant","color","location","useLocation","dispatch","useDispatch","teamsLeagueSelected","useSelector","getTeamsLeagueSelector","teamsLeague","prepareTeamsLeague","sort","a","b","toLowerCase","useEffect","fetchTeamsLeagueAsync","useCallback","SetFilterTeamsLeague","competition","option","routesPath"],"sourceRoot":""}