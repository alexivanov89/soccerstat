{"version":3,"file":"static/js/936.4a5e2bba.chunk.js","mappings":"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","sources":["components/ListData/ListData.jsx","pages/ListOfTeams/ListOfTeams.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport {\n  Autocomplete,\n  Box,\n  Card,\n  CardHeader,\n  Grid,\n  ListItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    padding: '0px 8px 8px 8px',\n    '&::-webkit-scrollbar': {\n      width: 16,\n      backgroundColor: '#F5F7FA',\n    },\n    '&::-webkit-scrollbar-track': {\n      borderRadius: 4,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.05)',\n      border: 'solid 6px transparent',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      borderRadius: 12,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.2)',\n      border: 'solid 6px transparent',\n    },\n  },\n  paper: {\n    width: '100%',\n    overflow: 'hidden',\n    padding: '0px 8px 8px 8px',\n  },\n  table: {\n    '& th, td': {\n      padding: 4,\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      tableLayout: 'fixed',\n      '& th, td': {\n        fontSize: '0.65rem',\n      },\n    },\n    '& img': {\n      maxWidth: '20px',\n      maxHeight: '20px',\n      marginRight: '2px',\n    },\n  },\n}));\n\nconst ListData = ({ list, listOptions, handleChange, maxHeight }) => {\n  const classes = useStyles();\n\n  return (\n    <Card sx={{ borderRadius: 4 }}>\n      <Grid container rowSpacing={1} sx={{ p: 1 }}>\n        <Grid item xs={12} sm={6}>\n          <CardHeader title={listOptions.title} subheader={listOptions.subheader} sx={{ p: 0 }} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {list.length !== 0 && (\n            <Autocomplete\n              disablePortal\n              id=\"combo-box-demo\"\n              getOptionLabel={listOptions.autocompleteOptions.getOptionLabel}\n              options={list}\n              sx={{ width: '100%', padding: '0px 5px' }}\n              onChange={(e, value) => {\n                handleChange(value);\n              }}\n              renderInput={(params) => (\n                <TextField {...params} label={listOptions.autocompleteOptions.label} />\n              )}\n            />\n          )}\n        </Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <TableContainer className={classes.tableContainer} sx={{ maxHeight: maxHeight }}>\n          <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {listOptions.table.tableColumns.map((item) => (\n                  <TableCell key={item}>{item}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list.map((item) => (\n                <TableRow key={item.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={listOptions.table.linkPathFirstColummns ? NavLink : null}\n                      to={{\n                        pathname: listOptions.table.linkPathFirstColummns,\n                        state: { id: `${item.id}` },\n                      }}\n                      sx={{ padding: '0px !important' }}\n                    >\n                      {item.name}\n                    </ListItem>\n                  </TableCell>\n                  <TableCell>\n                    <Box key={item.area.ensignUrl} sx={{ display: 'flex', alignItems: 'center' }}>\n                      {\n                        (listOptions.table.imgOption =\n                          'ensignUrl' &&\n                          (Boolean(item.area.ensignUrl) ? (\n                            <img src={item.area.ensignUrl} alt=\"img\" loading=\"lazy\" />\n                          ) : null))\n                      }\n                      {\n                        (listOptions.table.imgOption =\n                          'crestUrl' && Boolean(item.crestUrl) ? (\n                            <img src={item.crestUrl} alt=\"img\" loading=\"lazy\" />\n                          ) : null)\n                      }\n                      <Typography variant=\"p\" color=\"initial\">\n                        {item.area.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{\n                        pathname: listOptions.table.linkPathLastColummns,\n                        state: { id: `${item.id}` },\n                      }}\n                      sx={{ padding: '0px !important' }}\n                    >\n                      <Typography variant=\"p\" color=\"initial\">\n                        Календарь {item.name}\n                      </Typography>\n                    </ListItem>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Card>\n  );\n};\n\nexport default ListData;\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { ListData } from '../../components/ListData';\nimport { routesPath } from '../../router/routes';\nimport { SetFilterTeamsLeague } from '../../store/actions/creator/teamsLeague';\nimport {\n  fetchTeamsLeagueAsync,\n  getTeamsLeagueSelector,\n} from '../../store/reducers/teamsLeagueReducer';\n\nconst ListOfTeams = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const teamsLeagueSelected = useSelector(getTeamsLeagueSelector);\n  const { teamsLeague } = useSelector(({ teamsLeague }) => teamsLeague);\n\n  const prepareTeamsLeague = teamsLeagueSelected.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (location.state) {\n      dispatch(fetchTeamsLeagueAsync(location.state.id));\n    }\n  }, []);\n\n  const handleChange = useCallback(\n    (value) => {\n      dispatch(SetFilterTeamsLeague(value?.id));\n    },\n    [dispatch],\n  );\n\n  const listOptions = {\n    title: 'Список команд',\n    subheader: `Команды ${teamsLeague?.competition?.name}`,\n    autocompleteOptions: {\n      label: 'Найти команду',\n      getOptionLabel: (option) => `${option.name}, ${option.area.name}`,\n    },\n    table: {\n      tableColumns: ['Название команды', 'Страна', 'Календарь команды'],\n      linkPathFirstColummns: null,\n      linkPathLastColummns: routesPath.teamCalendar,\n      imgOption: 'crestUrl',\n    },\n  };\n\n  return (\n    <ListData\n      list={prepareTeamsLeague}\n      listOptions={listOptions}\n      handleChange={handleChange}\n      maxHeight=\"calc(100vh - 220px)\"\n    />\n  );\n};\n\nexport default ListOfTeams;\n"],"names":["useStyles","makeStyles","theme","tableContainer","padding","width","backgroundColor","borderRadius","boxShadow","border","paper","overflow","table","breakpoints","down","tableLayout","fontSize","maxWidth","maxHeight","marginRight","list","listOptions","handleChange","classes","Card","sx","Grid","container","rowSpacing","p","item","xs","sm","CardHeader","title","subheader","length","Autocomplete","disablePortal","id","getOptionLabel","autocompleteOptions","options","onChange","e","value","renderInput","params","TextField","label","Paper","className","TableContainer","Table","stickyHeader","TableHead","TableRow","tableColumns","map","TableCell","TableBody","ListItem","component","linkPathFirstColummns","NavLink","to","pathname","state","name","Box","display","alignItems","imgOption","Boolean","area","ensignUrl","src","alt","loading","crestUrl","Typography","variant","color","linkPathLastColummns","location","useLocation","dispatch","useDispatch","teamsLeagueSelected","useSelector","getTeamsLeagueSelector","teamsLeague","prepareTeamsLeague","sort","a","b","toLowerCase","useEffect","fetchTeamsLeagueAsync","useCallback","SetFilterTeamsLeague","competition","option","routesPath"],"sourceRoot":""}