{"version":3,"file":"static/js/457.a9609530.chunk.js","mappings":"gMAGMA,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,MAAO,OACPC,SAAU,cA0Cd,EAtCqB,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QACNN,IAEhB,OACE,SAACO,EAAA,EAAD,WACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,WAAY,EAAGC,GAAI,CAAEC,EAAG,EAAGC,QAAS,OAAQC,eAAgB,UAA5E,SACgC,KAAtB,OAAPR,QAAO,IAAPA,GAAA,UAAAA,EAASA,eAAT,eAAkBS,UAAlB,OACCT,QADD,IACCA,GADD,UACCA,EAASA,eADV,aACC,EAAkBU,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,MAAOC,EAA1C,EAA0CA,SAAUC,EAApD,EAAoDA,SAApD,OACpB,UAACd,EAAA,GAAD,CACEe,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EALN,WAQE,SAACC,EAAA,EAAD,CAAYjB,GAAI,CAAEkB,GAAI,IAAKC,UAAW,UAAYC,MAAM,iBAAxD,SACU,OAAPzB,QAAO,IAAPA,GAAAA,EAASW,YAAT,UACMX,EAAQW,YAAYe,KAD1B,aACmCb,EADnC,wCAEMF,QAFN,IAEMA,OAFN,EAEMA,EAAae,KAFnB,aAE4Bb,EAF5B,0BAIH,SAACS,EAAA,EAAD,CAAYjB,GAAI,CAAEkB,GAAI,IAAKC,UAAW,UAAYC,MAAM,iBAAxD,SACGb,KAEH,SAACU,EAAA,EAAD,CAAYjB,GAAI,CAAEkB,GAAI,IAAKC,UAAW,UAAYC,MAAM,iBAAxD,mBACMV,EAASW,KADf,YAEgC,OAA5BZ,EAAMa,SAASZ,SAAoB,GAAKD,EAAMa,SAASZ,SAF3D,cAGoC,OAA5BD,EAAMa,SAASX,SAAoB,GAAKF,EAAMa,SAASX,SAH/D,YAIIA,EAASU,UApBf,UAMUd,EANV,YAMqBG,EAASW,KAN9B,YAMsCV,EAASU,iB,2FCE3D,UApBuB,WACrB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACT/B,GAAYgC,EAAAA,EAAAA,KAAY,qBAAGC,iBAA3BjC,QACR,GAA6BgC,EAAAA,EAAAA,KAAY,qBAAGE,WAApCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAalB,OAXAC,EAAAA,EAAAA,YAAU,WACJT,EAASU,OACXR,GACES,EAAAA,EAAAA,GAAwBX,EAASU,MAAME,GAAI,CACzC,CAAEd,KAAM,WAAYe,MAAON,GAC3B,CAAET,KAAM,SAAUe,MAAOL,QAI9B,CAACD,EAAUC,KAEP,SAAC,IAAD,CAAcpC,QAASA","sources":["components/ListCalendar/ListCalendar.jsx","pages/LeagueCalendar/LeagueCalendar.js"],"sourcesContent":["import { Grid, Paper, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n    overflow: 'hidden',\n  },\n}));\n\nconst ListCalendar = ({ matches }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper>\n      <Grid container rowSpacing={1} sx={{ p: 1, display: 'flex', justifyContent: 'center' }}>\n        {matches?.matches?.length !== 0 &&\n          matches?.matches?.map(({ competition, utcDate, matchday, score, homeTeam, awayTeam }) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              md={4}\n              lg={3}\n              key={`${utcDate}-${homeTeam.name}-${awayTeam.name}`}\n            >\n              <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                {matches?.competition\n                  ? `${matches.competition.name}, ${matchday} тур`\n                  : `${competition?.name}, ${matchday} тур`}\n              </Typography>\n              <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                {utcDate}\n              </Typography>\n              <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                {`${homeTeam.name} ${\n                  score.fullTime.homeTeam === null ? '' : score.fullTime.homeTeam\n                } - ${score.fullTime.awayTeam === null ? '' : score.fullTime.awayTeam} ${\n                  awayTeam.name\n                }`}\n              </Typography>\n            </Grid>\n          ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ListCalendar;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { ListCalendar } from '../../components/ListCalendar';\nimport { fetchMatchesLeagueAsync } from '../../store/reducers/matchesLeagueReducer';\n\nconst LeagueCalendar = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { matches } = useSelector(({ matchesLeague }) => matchesLeague);\n  const { dateFrom, dateTo } = useSelector(({ filters }) => filters);\n\n  useEffect(() => {\n    if (location.state) {\n      dispatch(\n        fetchMatchesLeagueAsync(location.state.id, [\n          { name: 'dateFrom', value: dateFrom },\n          { name: 'dateTo', value: dateTo },\n        ]),\n      );\n    }\n  }, [dateFrom, dateTo]);\n\n  return <ListCalendar matches={matches} />;\n};\n\nexport default LeagueCalendar;\n"],"names":["useStyles","makeStyles","theme","paper","width","overflow","matches","Paper","Grid","container","rowSpacing","sx","p","display","justifyContent","length","map","competition","utcDate","matchday","score","homeTeam","awayTeam","item","xs","sm","md","lg","Typography","mb","textAlign","color","name","fullTime","location","useLocation","dispatch","useDispatch","useSelector","matchesLeague","filters","dateFrom","dateTo","useEffect","state","fetchMatchesLeagueAsync","id","value"],"sourceRoot":""}