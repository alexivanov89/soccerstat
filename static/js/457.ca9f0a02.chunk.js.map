{"version":3,"file":"static/js/457.ca9f0a02.chunk.js","mappings":"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","sources":["components/ListCalendar/ListCalendar.jsx","components/MyAutocomplete/MyAutocomplete.jsx","pages/LeagueCalendar/LeagueCalendar.js"],"sourcesContent":["import { format } from 'date-fns';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\n\nconst ListCalendar = ({ matches }) => {\n  const matchdays = Array.from(new Set(matches?.matches.map(({ matchday }) => matchday)));\n  const prepareMatches = matchdays.map((matchdayItem) => ({\n    matchday: matchdayItem,\n    matches: matches?.matches.filter(({ matchday }) => matchday === matchdayItem),\n  }));\n\n  return (\n    <Paper>\n      <Grid container rowSpacing={1} sx={{ p: 1, display: 'flex', justifyContent: 'center' }}>\n        <Box>\n          <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n            {matches?.competition ? `Календарь ${matches.competition.name}` : ``}\n          </Typography>\n        </Box>\n        <Grid\n          container\n          rowSpacing={1}\n          sx={{ p: 1, display: 'flex', justifyContent: 'center', width: '100%' }}\n        >\n          {matches?.matches?.length !== 0 &&\n            prepareMatches?.map(({ matchday, matches }) => (\n              <Grid\n                container\n                item\n                key={matchday}\n                sx={(theme) => ({\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  borderBottom: `1px solid ${theme.palette.primary.main}`,\n                })}\n              >\n                <Box>\n                  <Typography sx={{ mb: 1.5, textAlign: 'center' }} color=\"text.secondary\">\n                    {`${matchday} Тур`}\n                  </Typography>\n                </Box>\n                {matches?.map(({ competition, utcDate, matchday, score, homeTeam, awayTeam }) => (\n                  <Grid container item key={`${utcDate}-${homeTeam.name}-${awayTeam.name}`}>\n                    <Grid item xs={12} md={6}>\n                      <Typography\n                        sx={[\n                          { mb: 1.5, textAlign: 'center' },\n                          (theme) => ({\n                            [theme.breakpoints.down('md')]: {\n                              textAlign: 'start',\n                            },\n                          }),\n                        ]}\n                        color=\"text.secondary\"\n                      >\n                        {format(new Date(utcDate), 'MM/dd/yyyy k:m')}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <Typography\n                        sx={{ mb: 1.5, textAlign: 'start', display: 'inline-block' }}\n                        color=\"text.secondary\"\n                      >\n                        {`${homeTeam.name}`}\n                      </Typography>\n                      <Typography\n                        sx={{ mb: 1.5, mx: 1, textAlign: 'start', display: 'inline-block' }}\n                        color=\"text.secondary\"\n                      >\n                        {`${score.fullTime.homeTeam === null ? '' : score.fullTime.homeTeam} - ${\n                          score.fullTime.awayTeam === null ? '' : score.fullTime.awayTeam\n                        }`}\n                      </Typography>\n                      <Typography\n                        sx={{ mb: 1.5, textAlign: 'start', display: 'inline-block' }}\n                        color=\"text.secondary\"\n                      >\n                        {`${awayTeam.name}`}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            ))}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ListCalendar;\n","import { useState } from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\n\nconst MyAutocomplete = ({ getOptionLabel, options, onChange, label }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      getOptionLabel={getOptionLabel}\n      options={options}\n      sx={{ width: '100%', padding: '0px 5px' }}\n      onChange={(e, newValue) => {\n        onChange(newValue);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  );\n};\n\nexport default MyAutocomplete;\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ListCalendar } from '../../components/ListCalendar';\nimport { fetchMatchesLeagueAsync } from '../../store/reducers/matchesLeagueReducer';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { MyAutocomplete } from '../../components/MyAutocomplete';\nimport {\n  fetchCompetitionsAsync,\n  getCompetitionsSelector,\n} from '../../store/reducers/competitionsReducer';\nimport { SetFilterCompetitions } from '../../store/actions/creator/competitions';\nimport { routesPath } from '../../router/routes';\nimport { ClearMatchesLeague } from '../../store/actions/creator/matchesLeague';\n\nconst LeagueCalendar = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { matches, loading, error } = useSelector(({ matchesLeague }) => matchesLeague);\n  const filters = useSelector(({ filters }) => filters);\n  const { dateFrom, dateTo } = filters;\n  const competitions = useSelector(getCompetitionsSelector);\n\n  const prepareCompetitions = competitions.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (location.state?.id) {\n      dispatch(\n        fetchMatchesLeagueAsync(location.state.id, [\n          { name: 'dateFrom', value: dateFrom },\n          { name: 'dateTo', value: dateTo },\n        ]),\n      );\n    }\n    return () => {\n      dispatch(SetFilterCompetitions(null));\n      dispatch(ClearMatchesLeague());\n    };\n  }, [filters, location.state?.id]);\n\n  useEffect(() => {\n    dispatch(fetchCompetitionsAsync());\n    return () => {\n      dispatch(ClearMatchesLeague());\n    };\n  }, []);\n\n  const handleChange = useCallback(\n    (value) => {\n      dispatch(SetFilterCompetitions(value?.id));\n      history.push({\n        pathname: routesPath.leagueCalendar,\n        state: { id: `${value?.id}` },\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      {location.state?.id ? (\n        <>\n          {loading && 'loading'}\n          {!loading && !error && <ListCalendar matches={matches} />}\n          {error && (\n            <Typography variant=\"h1\" component=\"h2\" color=\"white\" align=\"center\">\n              нет данных\n            </Typography>\n          )}\n        </>\n      ) : (\n        <Card\n          sx={{\n            borderRadius: 4,\n            minHeight: '120px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <MyAutocomplete\n            getOptionLabel={(option) => `${option.name}, ${option.area.countryCode}`}\n            options={prepareCompetitions}\n            onChange={handleChange}\n            label={'Найти Чемпионат'}\n          />\n          <Typography variant=\"h5\" color=\"initial\">\n            Выберите Чемпионат\n          </Typography>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default LeagueCalendar;\n"],"names":["matches","prepareMatches","Array","from","Set","map","matchday","matchdayItem","filter","Paper","Grid","container","rowSpacing","sx","p","display","justifyContent","Box","Typography","mb","textAlign","color","competition","name","width","length","item","theme","flexDirection","borderBottom","palette","primary","main","utcDate","score","homeTeam","awayTeam","xs","md","breakpoints","down","format","Date","mx","fullTime","getOptionLabel","options","onChange","label","useState","inputValue","setInputValue","Autocomplete","disablePortal","id","padding","e","newValue","onInputChange","event","newInputValue","renderInput","params","TextField","location","useLocation","dispatch","useDispatch","history","useHistory","useSelector","matchesLeague","loading","error","filters","dateFrom","dateTo","prepareCompetitions","getCompetitionsSelector","sort","a","b","toLowerCase","useEffect","state","fetchMatchesLeagueAsync","value","SetFilterCompetitions","ClearMatchesLeague","fetchCompetitionsAsync","handleChange","useCallback","push","pathname","routesPath","variant","component","align","borderRadius","minHeight","alignItems","option","area","countryCode"],"sourceRoot":""}