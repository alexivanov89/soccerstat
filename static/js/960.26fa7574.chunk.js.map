{"version":3,"file":"static/js/960.26fa7574.chunk.js","mappings":"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","sources":["components/ListData/ListData.jsx","components/MyAutocomplete/MyAutocomplete.jsx","components/ListMatches/ListMatches.jsx","pages/ListOfLeaguesCompetitions/ListOfLeaguesCompetitions.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Grid from '@mui/material/Grid';\nimport ListItem from '@mui/material/ListItem';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport { MyAutocomplete } from '../MyAutocomplete';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    padding: '0px 8px 8px 8px',\n    '&::-webkit-scrollbar': {\n      width: 16,\n      backgroundColor: '#F5F7FA',\n    },\n    '&::-webkit-scrollbar-track': {\n      borderRadius: 4,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.05)',\n      border: 'solid 6px transparent',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      borderRadius: 12,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.2)',\n      border: 'solid 6px transparent',\n    },\n  },\n  paper: {\n    width: '100%',\n    overflow: 'hidden',\n    padding: '0px 8px 8px 8px',\n  },\n  table: {\n    '& th, td': {\n      padding: 4,\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      tableLayout: 'fixed',\n      '& th, td': {\n        fontSize: '0.65rem',\n      },\n    },\n    '& img': {\n      maxWidth: '20px',\n      maxHeight: '20px',\n      marginRight: '2px',\n    },\n  },\n}));\n\nconst ListData = ({ list, listOptions, handleChange, maxHeight }) => {\n  const classes = useStyles();\n\n  return (\n    <Card sx={{ borderRadius: 4 }}>\n      <Grid container rowSpacing={1} sx={{ p: 1 }}>\n        <Grid item xs={12} sm={6}>\n          <CardHeader title={listOptions.title} subheader={listOptions.subheader} sx={{ p: 0 }} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {list.length !== 0 && (\n            <MyAutocomplete\n              getOptionLabel={listOptions.autocompleteOptions.getOptionLabel}\n              options={list}\n              onChange={handleChange}\n              label={listOptions.autocompleteOptions.label}\n            />\n          )}\n        </Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <TableContainer className={classes.tableContainer} sx={{ maxHeight: maxHeight }}>\n          <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {listOptions.table.tableColumns.map((item) => (\n                  <TableCell key={item}>{item}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list.map((item) => (\n                <TableRow key={item.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={listOptions.table.linkPathFirstColummns ? NavLink : null}\n                      to={{\n                        pathname: listOptions.table.linkPathFirstColummns,\n                        state: { id: `${item.id}` },\n                      }}\n                      sx={{ padding: '0px !important' }}\n                    >\n                      {item.name}\n                    </ListItem>\n                  </TableCell>\n                  <TableCell>\n                    <Box key={item.area.ensignUrl} sx={{ display: 'flex', alignItems: 'center' }}>\n                      {\n                        (listOptions.table.imgOption =\n                          'ensignUrl' &&\n                          (Boolean(item.area.ensignUrl) ? (\n                            <img src={item.area.ensignUrl} alt=\"img\" loading=\"lazy\" />\n                          ) : null))\n                      }\n                      {\n                        (listOptions.table.imgOption =\n                          'crestUrl' && Boolean(item.crestUrl) ? (\n                            <img src={item.crestUrl} alt=\"img\" loading=\"lazy\" />\n                          ) : null)\n                      }\n                      <Typography variant=\"p\" color=\"initial\">\n                        {item.area.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <ListItem\n                      key={item.id}\n                      component={NavLink}\n                      to={{\n                        pathname: listOptions.table.linkPathLastColummns,\n                        state: { id: `${item.id}` },\n                      }}\n                      sx={{ padding: '0px !important' }}\n                    >\n                      <Typography variant=\"p\" color=\"initial\">\n                        Календарь {item.name}\n                      </Typography>\n                    </ListItem>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Card>\n  );\n};\n\nexport default ListData;\n","import { useState } from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\n\nconst MyAutocomplete = ({ getOptionLabel, options, onChange, label }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      getOptionLabel={getOptionLabel}\n      options={options}\n      sx={{ width: '100%', padding: '0px 5px' }}\n      onChange={(e, newValue) => {\n        onChange(newValue);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  );\n};\n\nexport default MyAutocomplete;\n","import Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    padding: 5,\n    maxHeight: 60,\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      width: 16,\n      backgroundColor: '#F5F7FA',\n    },\n    '&::-webkit-scrollbar-track': {\n      borderRadius: 4,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.05)',\n      border: 'solid 6px transparent',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      borderRadius: 12,\n      boxShadow: 'inset 0 0 16px 16px rgba(13, 26, 51, 0.2)',\n      border: 'solid 6px transparent',\n    },\n  },\n}));\n\nconst ListMatches = ({ todayMatches }) => {\n  const { matches, loading } = todayMatches;\n  const classes = useStyles();\n\n  return (\n    <Card sx={{ borderRadius: 4, mb: 2, maxHeight: '20vh' }}>\n      <CardHeader sx={{ p: 1, pb: 0 }} title=\"Список сегодняшних матчей\" />\n      <Box sx={{ p: 1 }}>\n        <List className={classes.list}>\n          <Grid container rowSpacing={1} sx={{ overflow: 'auto', alignItems: 'center' }}>\n            {loading && 'Loading...'}\n            {!loading &&\n              matches?.matches?.length !== 0 &&\n              matches?.matches?.map((match) => (\n                <Grid item xs={12} sm={6} lg={4} key={match.id} sx={{ overflow: 'hidden' }}>\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', fontSize: '0.75rem' }}>\n                    <Typography variant=\"span\" color=\"initial\">\n                      {match.competition.name}\n                    </Typography>\n                    <Typography variant=\"span\" color=\"initial\" sx={{ px: 1 }}>\n                      {`${match.matchday} Тур: `}\n                    </Typography>\n                    <Typography variant=\"span\" color=\"initial\" sx={{ minWidth: 300 }}>\n                      {`${match.homeTeam.name} - ${match.awayTeam.name}`}\n                    </Typography>\n                  </Box>\n                </Grid>\n              ))}\n            {!loading && matches?.matches?.length === 0 && (\n              <Typography variant=\"span\" color=\"initial\">\n                Сегодня матчей нет\n              </Typography>\n            )}\n          </Grid>\n        </List>\n      </Box>\n    </Card>\n  );\n};\n\nexport default ListMatches;\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchCompetitionsAsync,\n  getCompetitionsSelector,\n} from '../../store/reducers/competitionsReducer';\nimport { fetchTodayMatchesAsync } from '../../store/reducers/todayMatchesReducer';\nimport { SetFilterCompetitions } from '../../store/actions/creator/competitions';\nimport { ListData } from '../../components/ListData';\nimport { ListMatches } from '../../components/ListMatches';\nimport { routesPath } from '../../router/routes';\n\nconst ListOfLeaguesCompetitions = () => {\n  const dispatch = useDispatch();\n  const competitions = useSelector(getCompetitionsSelector);\n  const todayMatches = useSelector(({ todayMatches }) => todayMatches);\n  const prepareCompetitions = competitions.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  useEffect(() => {\n    dispatch(fetchTodayMatchesAsync());\n    dispatch(fetchCompetitionsAsync());\n  }, []);\n\n  const handleChange = useCallback(\n    (value) => {\n      dispatch(SetFilterCompetitions(value?.id));\n    },\n    [dispatch],\n  );\n\n  const listOptions = {\n    title: 'Список лиг',\n    subheader: 'Чемпионаты ведущих стран Европы',\n    autocompleteOptions: {\n      label: 'Найти Чемпионат',\n      getOptionLabel: (option) => `${option.name}, ${option.area.countryCode}`,\n    },\n    table: {\n      tableColumns: ['Название лиги', 'Страна', 'Календарь лиги'],\n      linkPathFirstColummns: routesPath.listOfTeams,\n      linkPathLastColummns: routesPath.leagueCalendar,\n      imgOption: 'ensignUrl',\n    },\n  };\n\n  return (\n    <>\n      <ListMatches todayMatches={todayMatches} />\n      <ListData\n        list={prepareCompetitions}\n        listOptions={listOptions}\n        handleChange={handleChange}\n        maxHeight=\"calc(95vh - 345px)\"\n      />\n    </>\n  );\n};\n\nexport default ListOfLeaguesCompetitions;\n"],"names":["useStyles","makeStyles","theme","tableContainer","padding","width","backgroundColor","borderRadius","boxShadow","border","paper","overflow","table","breakpoints","down","tableLayout","fontSize","maxWidth","maxHeight","marginRight","list","listOptions","handleChange","classes","Card","sx","Grid","container","rowSpacing","p","item","xs","sm","CardHeader","title","subheader","length","MyAutocomplete","getOptionLabel","autocompleteOptions","options","onChange","label","Paper","className","TableContainer","Table","stickyHeader","TableHead","TableRow","tableColumns","map","TableCell","TableBody","ListItem","component","linkPathFirstColummns","NavLink","to","pathname","state","id","name","Box","display","alignItems","imgOption","Boolean","area","ensignUrl","src","alt","loading","crestUrl","Typography","variant","color","linkPathLastColummns","useState","inputValue","setInputValue","Autocomplete","disablePortal","e","newValue","onInputChange","event","newInputValue","renderInput","params","TextField","overflowX","overflowY","todayMatches","matches","mb","pb","List","match","lg","flexWrap","competition","px","matchday","minWidth","homeTeam","awayTeam","dispatch","useDispatch","competitions","useSelector","getCompetitionsSelector","prepareCompetitions","sort","a","b","toLowerCase","useEffect","fetchTodayMatchesAsync","fetchCompetitionsAsync","useCallback","value","SetFilterCompetitions","option","countryCode","routesPath","ListData"],"sourceRoot":""}